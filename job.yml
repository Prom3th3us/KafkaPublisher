apiVersion: batch/v1
kind: Job
metadata:
  name: alpakka-kafka-publisher-1-million
spec:
  manualSelector: true
  selector:
    matchLabels:
      app: pcs-cluster
  template:
    metadata:
      labels:
        app: pcs-cluster
    # This is the pod template
    spec:
      serviceAccountName: pcs-cluster
      containers:
        - name: alpakka-kafka-publisher-1-million
          image: miguelemos/alpakka_kafka_publisher:with-prometheus-and-service-monitor
          imagePullPolicy: IfNotPresent
          ports:
            - protocol: TCP
              containerPort: 9095 
              name: monitoring
          env:
            - name: KAFKA_SERVERS
              value: "kafka-svc.kafka-kraft.svc.cluster.local:9092"
            - name: MESSAGES_AMOUNT
              value: "26000000"
            - name: TOPIC
              value: 3-partition
      restartPolicy: OnFailure
      # The pod template ends here
---
# first run kubectl create -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/bundle.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: servicemonitor-pcs-cluster
  labels:
    release: prometheus
    app: pcs-cluster
spec:
  selector:
    matchLabels:
      app: pcs-cluster
  endpoints:
    - port: monitoring
      path: /
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/metrics
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - configmaps
    verbs: ["get"]
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: default
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  image: quay.io/prometheus/prometheus:v2.22.1
  nodeSelector:
    kubernetes.io/os: linux
  replicas: 2
  resources:
    requests:
      memory: 400Mi
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus
  version: v2.22.1
  serviceMonitorSelector: {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  ports:
    - name: web
      port: 9090
      targetPort: web
  selector:
    app: prometheus
  sessionAffinity: ClientIP
